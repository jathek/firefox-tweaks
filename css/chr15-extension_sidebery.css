/* --------------------- shrink sidebar splitter when sidebery is open and sidebar isn't autohidden */
#main-window #sidebar-box[sidebarcommand="_3c078156-979c-498b-8990-85f7987dd929_-sidebar-action"][positionend] + #sidebar-splitter {
  margin-inline: 0 0;
  width: 1px;
  border-left: 1px solid color-mix(in srgb, var(--lwt-accent-color) 95%, white);
}
/* --------------------- hide sidebar header */
#main-window #sidebar-box[sidebarcommand="_3c078156-979c-498b-8990-85f7987dd929_-sidebar-action"] #sidebar-header {
  display: none;
}
/* --------------------- sidebery sidebar stylesheet */
/* about:devtools-toolbox?id={3c078156-979c-498b-8990-85f7987dd929}&type=extension */
@-moz-document regexp("^moz-extension://\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}/sidebar/sidebar\.html$")
{
  /* --------------------- add root variables */
  #root {
    --tabs-font: 13pt "Segoe UI";
    --tabs-count-font: calc(var(--tabs-margin) * 1.5) "Verdana";
    --bookmarks-bookmark-font: 0.875rem "Segoe UI";
    --bookmarks-folder-font: 10pt "Segoe UI";
    --tabs-height: calc(var(--fav-size) + var(--tabs-margin) * 2);
    --tabs-pinned-height: var(--tabs-height);
    --tabs-pinned-width: var(--tabs-height);
    --fav-size: 24px;
    --tabs-margin: 6px;
    --tabs-inner-gap: var(--tabs-margin);
    --tabs-audio-btn-height: 18px;
    --tabs-audio-btn-width: 18px;
    --tree-mark-size: 4px;
    /* --selected-bg: rgb(255 108 151 / 0.8) !important; */
    /* --selected-border: var(--selected-bg) !important; */
  }

  /* --------------------- theming */
  /* -------------- add noise to sidebar elements' backgrounds */
  #root,
  .NavigationBar,
  .SearchBar,
  .SearchBar::before,
  .TabsPanel .PinnedTabsBar,
  .TabsPanel .bottom-space,
  .TabsPanel .new-tab-btns {
    background-image: url("chrome://userchrome/content/UserStyles/images/noise-512x512.png");
    /* background-color: color-mix(in srgb, var(--frame-bg) 90%, transparent);
    background-image: url("chrome://global/skin/media/imagedoc-darknoise.png");
    background-blend-mode: color-dodge; */
  }
  /* -------------- change scroll bar color to match theme */
  .ScrollBox > .scroll-container {
    scrollbar-color: color-mix(in srgb, var(--ff-frame) 75%, white) color-mix(in srgb, var(--ff-frame) 90%, white) !important;
  }

  /* --------------------- tabs */
  /* -------------- pinned tabs bar */
  #root[data-pinned-tabs-position="panel"] .PinnedTabsBar {
    gap: var(--tabs-margin);
    padding: var(--tabs-margin) 0;
    flex-shrink: 0;
  }
  #root[data-pinned-tabs-position="panel"] .PinnedTabsBar {
    flex-wrap: nowrap;
    position: relative;
    overflow-y: hidden;
    scrollbar-width: none;
  }
  /* ------- auto-center */
  #root[data-pinned-tabs-position="panel"] .PinnedTabsBar::before,
  #root[data-pinned-tabs-position="panel"] .PinnedTabsBar::after {
    content: '';
    display: inline-block;
    width: 0;
    opacity: 0;
    margin: auto;
    pointer-events: none;
    touch-action: none;
  }
  #root[data-pinned-tabs-position="panel"] .PinnedTabsBar::after {
    position: static;
    right: 0;
  }
  /* ------- dnd-pointer: fix spacing after pinned tab resizing */
  #root[data-pinned-tabs-position="panel"] .PinnedTabsBar .tab-wrapper::after {
    left: calc(-1 * var(--tabs-margin) / 1.5);
  }
  /* -------------- tab */
  .Tab[data-pin="false"],
  .ClosedTabsSubPanel .closed-tab {
    width: 100%;
    height: var(--tabs-height);
    margin: var(--tabs-margin) 0;
    padding: 0;
  }
  /*   .ClosedTabsSubPanel .closed-tab {
    width: calc(100% - var(--tabs-margin) * 2);
    height: calc(var(--tabs-height) + var(--tabs-margin));
    margin: 0 var(--tabs-margin);
    padding-bottom: var(--tabs-margin);
    padding-left: calc(var(--tabs-indent) * 16);
  } */
  /* -------------- body */
  .Tab[data-pin="false"] .body,
  .ClosedTabsSubPanel .closed-tab .body {
    left: var(--tabs-margin) !important;
    width: calc(100% - var(--tabs-margin) * 2);
  }
  /* -------------- favicons */
  .Tab .fav,
  .Tab .fav > .fav-icon,
  .ClosedTabsSubPanel .closed-tab .fav,
  .ClosedTabsSubPanel .closed-tab .fav > .fav-icon {
    width: var(--fav-size);
    height: var(--fav-size);
    /* background: #FF000055; */
    /* filter: drop-shadow(0 0 4px rgb(220 220 220 / 0.3)) !important; */
  }
  .Tab[data-pin="false"] .fav,
  .ClosedTabsSubPanel .closed-tab .fav {
    margin: var(--tabs-inner-gap);
  }
  /* -------------- audio icon */
  .Tab .audio {
    filter: drop-shadow(0 0 1px var(--toolbar-fg));
  }
  .Tab[data-pin="false"] .audio {
    top: calc(var(--fav-size) / 2 - var(--tabs-inner-gap) / 2);
    left: calc(var(--fav-size) + var(--tabs-inner-gap));
    width: var(--tabs-audio-btn-width);
    height: var(--tabs-audio-btn-height);
  }
  .Tab[data-pin="true"] .audio {
    top: calc(var(--fav-size) - var(--tabs-inner-gap) / 3) !important;
    left: calc(var(--fav-size) - var(--tabs-inner-gap) / 3) !important;
    width: calc(var(--tabs-pinned-audio-btn-width) - var(--tabs-inner-gap) / 3);
    height: calc(var(--tabs-pinned-audio-btn-height) - var(--tabs-inner-gap) / 3);
  }
  /* -------------- t-box */
  .Tab .t-box,
  .ClosedTabsSubPanel .closed-tab .t-box {
    --audio-btn-offset: calc(var(--tabs-audio-btn-width) - var(--tabs-inner-gap));
    --close-btn-offset: calc(var(--fav-size) - var(--tabs-inner-gap));
    height: var(--fav-size);
  }
  .Tab .title {
    padding-bottom: 0;
  }
  /* -------------- close button */
  .Tab .close {
    top: var(--tabs-inner-gap);
    right: var(--tabs-inner-gap);
    height: var(--fav-size);
    width: var(--fav-size);
  }
  /* -------------- dnd-pointer: fix spacing after tab resizing */
  .TabsPanel[data-pos="center"] ~ .pointer {
    margin-top: var(--tabs-margin);
  }

  /* --------------------- box shadows */
  /* -------------- for nav buttons */
  .NavigationBar.-top[data-layout="inline"]::after {
    content: "";
    width: 100%;
    height: 6px;
    left: 0;
    bottom: -6px;
    box-shadow: 0 -1px 0 0 rgb(0 0 0 / .071),0 -1px 6px 0 rgb(0 0 0 / .408);
    clip-path: inset(-6px 0 0 0);
    position: absolute;
  }
  #root[data-nav-inline="true"] .top-horizontal-box {
    margin-bottom: 0;
  }
  /* -------------- for search bar */
  #search_bar[data-showed="true"] {
    margin-top: -6px;
    margin-bottom: -6px;
    height: calc(var(--nav-btn-height) + 12px);
    padding: 0;
    cursor: default;
  }
  #search_bar[data-showed="true"]::before {
    top: calc(6px + 2px);
    height: calc(var(--nav-btn-height) - 6px + 2px);
  }
  #search_bar[data-showed="true"]::after {
    content: "";
    position: absolute;
    left: 0;
    bottom: 6px;
    width: 100%;
    height: 6px;
    box-shadow: 0 1px 0 0 rgb(0 0 0 / .071),0 1px 6px 0 rgb(0 0 0 / .408);
    clip-path: inset(0 0 -6px 0);
    z-index: 200;
  }
  #search_bar .clear-btn {
    width: 18px;
    margin: 6px;
  }

  /* --------------------- adjust navigation buttons */
  .NavigationBar[data-layout="inline"] .nav-item {
    margin: 2px 1px;
  }
  .NavigationBar[data-layout="inline"] .main-items .nav-item:first-of-type {
    margin-left: 2px;
  }
  .NavigationBar[data-layout="inline"] .static-btns .nav-item:last-of-type {
    margin-right: 2px;
  }
  .NavigationBar[data-layout="inline"] .main-items,
  .NavigationBar[data-layout="inline"] .static-btns {
    gap: 0;
  }
  .NavigationBar[data-layout="inline"] .main-items .nav-item[data-index] {
    position: relative;
    transform: none;
  }

  /* --------------------- adjust new tab button and closed tab button */
  .TabsPanel .new-tab-btns[data-new-tab-bar-position="bottom"],
  .TabsPanel .new-tab-btns[data-new-tab-bar-position="bottom"] + .bottom-bar {
    height: var(--nav-btn-height);
    width: calc(50%);
  }
  .TabsPanel .new-tab-btns[data-new-tab-bar-position="bottom"] {
    flex-shrink: 0;
    padding: 2px 2px 2px 1px;
    align-self: flex-end;
  }
  .TabsPanel .new-tab-btns[data-new-tab-bar-position="bottom"] + .bottom-bar {
    margin-top: calc(-1 * var(--nav-btn-height));
    padding: 2px 1px 2px 2px;
  }
  .TabsPanel .new-tab-btn,
  .TabsPanel .new-tab-btns[data-new-tab-bar-position="bottom"] + .bottom-bar .tool-btn {
    height: 100%;
  }
  .TabsPanel .new-tab-btns[data-new-tab-bar-position="bottom"] + .bottom-bar .tools {
    padding: 0;
  }
  .ClosedTabsSubPanel .closed-tab .branch-btn {
    width: var(--fav-size);
    height: var(--fav-size);
    margin-right: 6px;
  }

  /* --------------------- tab styles */
  /* .Tab{--tree-lvl: attr(data-lvl number,0);} - attr not supported in FF yet */
  .Tab[data-lvl="0"], .pointer[data-lvl="0"] { --tree-lvl: 0; }
  .Tab[data-lvl="1"], .pointer[data-lvl="1"] { --tree-lvl: 1; }
  .Tab[data-lvl="2"], .pointer[data-lvl="2"] { --tree-lvl: 2; }
  .Tab[data-lvl="3"], .pointer[data-lvl="3"] { --tree-lvl: 3; }
  .Tab[data-lvl="4"], .pointer[data-lvl="4"] { --tree-lvl: 4; }
  .Tab[data-lvl="5"], .pointer[data-lvl="5"] { --tree-lvl: 5; }
  .Tab[data-lvl="6"], .pointer[data-lvl="6"] { --tree-lvl: 6; }
  .Tab[data-lvl="7"], .pointer[data-lvl="7"] { --tree-lvl: 7; }
  .Tab[data-lvl="8"], .pointer[data-lvl="8"] { --tree-lvl: 8; }
  .Tab[data-lvl="9"], .pointer[data-lvl="9"] { --tree-lvl: 9; }
  .Tab[data-lvl="10"], .pointer[data-lvl="10"] { --tree-lvl: 10; }
  .Tab[data-lvl="11"], .pointer[data-lvl="11"] { --tree-lvl: 11; }
  /* -------------- tabs: change container strip into border */
  .Tab .ctx,
  .ClosedTabsSubPanel .closed-tab .container-mark {
    --ctx-height: var(--tabs-height);
    position: absolute !important;
    top: 0 !important;
    left: 0 !important;
    width: 100% !important;
    height: 100% !important;
    border-radius: 4px;
    background: var(--color);
    mask: linear-gradient(to top, transparent, #000) top / 100% 5px,
          linear-gradient(to bottom, transparent, #000) bottom / 100% 5px,
          linear-gradient(to left, transparent, #000) left / 5px 100%,
          linear-gradient(to right, transparent, #000) right / 5px 100%;
    mask-repeat: no-repeat;
    mask-composite: add;
    opacity: 0.75;
    pointer-events: none;
    touch-action: none;
  }
  .Tab[data-pin="true"] .ctx {
    top: 0 !important;
    left: 0 !important;
    width: calc(100%) !important;
    height: calc(100%) !important;
  }
  /* -------------- tabs: default browser style for updated tabs (blurball instead of blue dot) */
  .Tab:not([data-loading="true"]) .fav-icon {
    mask: unset !important;
  }
  .Tab .badge {
    width: 12px;
    height: 12px;
    top: -6px;
    left: -6px;
    z-index: -1;
    mask: radial-gradient(circle, #000 1px, #0000 2px),
          radial-gradient(circle, #000, #0000 5px);
    transition: opacity var(--d-slow), transform var(--d-slow), background-color var(--d-slow);
  }
  /* alternate methods
  1st - custom using mask:
    mask:
      radial-gradient(circle,#000 1px,#0000 2px),
      radial-gradient(circle,#000,#0000 5px);
  2nd - custom using background:
    background:
      radial-gradient(circle,var(--tabs-update-badge-bg) 1px,#0000 2px),
      radial-gradient(circle,var(--tabs-update-badge-bg),#0000 5px);
  3rd - browser default (20200418):
    background: url("chrome://browser/skin/tabbrowser/indicator-tab-attention.svg");
  4th - browser default via css:
    background:
      radial-gradient(circle,rgb(0 254 255),rgb(0 254 255) 2px,#0000 2px),
      radial-gradient(circle,rgb(0 200 215 / .6),rgb(0 200 215 / .6) 4px,#0000 4px),
      radial-gradient(circle,rgb(0 200 215 / .2),rgb(0 200 215 / .2) 6px,#0000 6px);
  5th - browser default w. smooth gradient:
    background: radial-gradient(circle,rgb(0 254 255),rgb(0 200 215 / .6) 2px,rgb(0 200 215 / .2) 4px,#0000 6px);
  */
  /* -------------- tabs: hourglass icon for pending tabs */
  .Tab[data-loading="true"] .badge,
  .Tab:not([data-loading="true"])[data-pending="true"] .badge {
    width: 14px;
    height: 14px;
    filter: drop-shadow(0 0 1px var(--toolbar-fg));
    background-color: var(--toolbar-fg);
    mask: url(chrome://browser/skin/tabbrowser/hourglass.svg) no-repeat center/contain;
    border-radius: 0px;
    z-index: initial;
    transition: opacity var(--d-slow), transform var(--d-slow), background var(--d-slow);
  }
  #root[data-color-scheme="dark"] .Tab[data-loading="true"] .badge,
  #root[data-color-scheme="dark"] .Tab:not([data-loading="true"])[data-pending="true"] .badge {
    filter: invert(100%) drop-shadow(0 0 1px black);
  }
  /* -------------- tree: move group counts to left of favicon */
  .Tab .fav > .child-count {
    top: calc(4 * var(--fav-size) / 6);
    right: calc(var(--fav-size) / -8);
    filter: drop-shadow(0 0 1px black);
    text-align: right;
    width: var(--fav-size);
  }
  /* -------------- tree: tab title */
  .Tab .t-box,
  .ClosedTabsSubPanel .closed-tab .t-box {
    width: calc(100% - 50px);
  }
  /* -------------- tree: tab title - active is bold */
  .Tab[data-active="true"] .title {
    --tabs-font: 12.5pt Segoe UI;
    font-weight: bold;
  }
  /* -------------- tree: tab title - discarded is strikethrough */
  .Tab[data-discarded="true"] .title {
    text-decoration: line-through;
  }
  /* -------------- tree: tab title - unread is italicized */
  .Tab[data-unread="true"] .title {
    font-style: italic;
  }
  /* -------------- tree: unread tab indicator is blurball */
  .Tab .unread-mark {
    width: 12px;
    height: 12px;
  }
  .Tab .unread-mark::before {
    z-index: -1;
    display: block;
    border-radius: 50%;
    border: 0 solid transparent;
    width: 12px;
    height: 12px;
    opacity: 0;
    transform: none;
    mask: radial-gradient(circle, #000 1px, #0000 2px), radial-gradient(circle, #000, #0000 5px);
    transition: opacity var(--d-slow), transform var(--d-slow),
      background-color var(--d-slow);
  }
  .Tab[data-unread="true"] .unread-mark::before {
    opacity: 1;
    transform: scale(1, 1);
    background-color: white;
  }
  .Tab[data-unread="true"][data-discarded="true"] .unread-mark::before {
    opacity: 0.32;
  }
  /* -------------- tree: expando fixes (center it) */
  .Tab[data-parent="true"][data-folded] .exp {
    left: calc(0%);
    top: calc(0%);
  }
  .Tab[data-parent="true"][data-folded="true"] .exp {
    top: calc(0% - 8px);
  }
  /* -------------- tree indents: attempt at lines
  .Tab:not([data-lvl="0"])::before {
    --tree-line-width: 24px;
    content: "";
    min-width: calc(var(--tree-line-width) * var(--tree-lvl));
    align-self: stretch;
    background-image: linear-gradient(
      90deg,
      transparent 11px,
      white 11px,
      transparent 12px
    );
    background-size: calc(var(--tree-line-width) * var(--tree-lvl)) 100%;
    background-position-x: 12px;
    background-repeat: repeat;
  }
  .Tab:not([data-lvl="0"]) > .body {
    background-image: linear-gradient(white, currentcolor);
    background-position-y: center;
    background-repeat: no-repeat;
    background-size: 1em 1px;
  }
  .Tab {
    padding-left: 0 !important;
  }
  .Tab > .body {
    overflow: hidden;
    width: unset;
    flex-basis: 100%;
  }
  .Tab:not([data-lvl="0"]) > .body {
    padding-left: 8px;
    margin-left: 0;
  } */
  /* -------------- tree indents: set indent using new tab spacing vars */
  #root[data-tabs-tree-lvl-marks="true"] {
    --tabs-indent: calc(var(--tabs-margin) + var(--tabs-inner-gap) + 4px);
  }
  #root[data-tabs-tree-lvl-marks="true"] .Tab[data-pin="false"]:not([data-lvl="0"]) {
    padding-left: calc(var(--tabs-indent) * var(--tree-lvl)); /* multiply indent by tree level */
  }
  /* -------------- tree indents: set height/width/style */
  #root[data-tabs-tree-lvl-marks="true"] .Tab[data-pin="false"]:not([data-lvl="0"]) .body::after,
  #root[data-tabs-tree-lvl-marks="true"] .ClosedTabsSubPanel .closed-tab:not([data-lvl="0"]) .body:after {
    --tabs-lvl-opacity: 0.6;
    --tree-mark-vert-offset: 0; /* for dots created to left of primary mark */
    display: block;
    top: calc(50% - var(--tree-mark-size) / 2);
    left: calc(-1 * var(--fav-size) / 2); /* mark starts at favicon edge of above tab */
    width: var(--tree-mark-size);
    height: var(--tree-mark-size);
    border-radius: 2px;
    background-color: var(--frame-fg);
    box-shadow: calc(var(--tabs-indent) * -1) var(--tree-mark-vert-offset) 0 0 var(--frame-fg),
                calc(var(--tabs-indent) * -2) var(--tree-mark-vert-offset) 0 0 var(--frame-fg),
                calc(var(--tabs-indent) * -3) var(--tree-mark-vert-offset) 0 0 var(--frame-fg),
                calc(var(--tabs-indent) * -4) var(--tree-mark-vert-offset) 0 0 var(--frame-fg),
                calc(var(--tabs-indent) * -5) var(--tree-mark-vert-offset) 0 0 var(--frame-fg),
                calc(var(--tabs-indent) * -6) var(--tree-mark-vert-offset) 0 0 var(--frame-fg),
                calc(var(--tabs-indent) * -7) var(--tree-mark-vert-offset) 0 0 var(--frame-fg),
                calc(var(--tabs-indent) * -8) var(--tree-mark-vert-offset) 0 0 var(--frame-fg),
                calc(var(--tabs-indent) * -9) var(--tree-mark-vert-offset) 0 0 var(--frame-fg),
                calc(var(--tabs-indent) * -10) var(--tree-mark-vert-offset) 0 0 var(--frame-fg);
  }
  /* -------------- tree indents: primary mark is digit for lvls above 1 */
  #root[data-tabs-tree-lvl-marks="true"] .Tab[data-pin="false"]:not([data-lvl="0"]):not([data-lvl="1"]) .body::after {
    --tree-mark-vert-offset: calc(var(--tree-mark-size) - 1px);
    top: calc(50% - var(--tree-mark-size) - 1px);
    font: bold var(--tabs-count-font);
    color: var(--toolbar-fg);
    background-color: unset;
    background-image: unset;
  }
  #root[data-tabs-tree-lvl-marks="true"] .Tab[data-pin="false"][data-lvl="2"] .body::after { content: "2"; }
  #root[data-tabs-tree-lvl-marks="true"] .Tab[data-pin="false"][data-lvl="3"] .body::after { content: "3"; }
  #root[data-tabs-tree-lvl-marks="true"] .Tab[data-pin="false"][data-lvl="4"] .body::after { content: "4"; }
  #root[data-tabs-tree-lvl-marks="true"] .Tab[data-pin="false"][data-lvl="5"] .body::after { content: "5"; }
  #root[data-tabs-tree-lvl-marks="true"] .Tab[data-pin="false"][data-lvl="6"] .body::after { content: "6"; }
  #root[data-tabs-tree-lvl-marks="true"] .Tab[data-pin="false"][data-lvl="7"] .body::after { content: "7"; }
  #root[data-tabs-tree-lvl-marks="true"] .Tab[data-pin="false"][data-lvl="8"] .body::after { content: "8"; }
  #root[data-tabs-tree-lvl-marks="true"] .Tab[data-pin="false"][data-lvl="9"] .body::after { content: "9"; }
  #root[data-tabs-tree-lvl-marks="true"] .Tab[data-pin="false"][data-lvl="10"] .body::after { content: "10"; }
  /* -------------- dnd-pointer: indent for tree tabs */
  .TabsPanel[data-pos="center"] ~ .pointer[data-pointer="between"]:not([data-lvl="0"])::before,
  .TabsPanel[data-pos="center"] ~ .pointer[data-pointer="between"]:not([data-lvl="0"])::after {
    transform: translateX(calc(var(--tabs-indent) * var(--tree-lvl) - var(--tabs-margin) - var(--tree-mark-size)));
  }
  /* -------------- dnd-pointer: add tree level digit */
  .TabsPanel[data-pos="center"] ~ .pointer[data-pointer="between"]::before {
    font: bold var(--tabs-count-font);
    color: var(--toolbar-fg);
  }
  .TabsPanel[data-pos="center"] ~ .pointer[data-pointer="between"][data-lvl="0"]::before { content: "0"; }
  .TabsPanel[data-pos="center"] ~ .pointer[data-pointer="between"][data-lvl="1"]::before { content: "1"; }
  .TabsPanel[data-pos="center"] ~ .pointer[data-pointer="between"][data-lvl="2"]::before { content: "2"; }
  .TabsPanel[data-pos="center"] ~ .pointer[data-pointer="between"][data-lvl="3"]::before { content: "3"; }
  .TabsPanel[data-pos="center"] ~ .pointer[data-pointer="between"][data-lvl="4"]::before { content: "4"; }
  .TabsPanel[data-pos="center"] ~ .pointer[data-pointer="between"][data-lvl="5"]::before { content: "5"; }
  .TabsPanel[data-pos="center"] ~ .pointer[data-pointer="between"][data-lvl="6"]::before { content: "6"; }
  .TabsPanel[data-pos="center"] ~ .pointer[data-pointer="between"][data-lvl="7"]::before { content: "7"; }
  .TabsPanel[data-pos="center"] ~ .pointer[data-pointer="between"][data-lvl="8"]::before { content: "8"; }
  .TabsPanel[data-pos="center"] ~ .pointer[data-pointer="between"][data-lvl="9"]::before { content: "9"; }
  .TabsPanel[data-pos="center"] ~ .pointer[data-pointer="between"][data-lvl="10"]::before { content: "10"; }
  /* -------------- tabs: audio events */
  /* ------- audible tabs */
  .Tab[data-audible="true"] .fav::before,
  .Tab[data-muted="true"] .fav::before {
    --pulse-diameter: calc(var(--tabs-height) - var(--tabs-inner-gap));
    --pulse-indent: calc(var(--tree-lvl) * var(--tabs-indent, 0));
    content: "";
    position: absolute;
    border-radius: 4px;
    pointer-events: none;
    touch-action: none;
    box-sizing: border-box;
  }
  .Tab[data-audible="true"][data-pin="true"]::before,
  .Tab[data-muted="true"][data-pin="true"]::before {
    --pulse-width-adj: 4px;
  }
  .Tab[data-audible="true"] .fav::before {
    animation: pulse-circle 1.25s ease-out 0s infinite;
    --pulse-color: white;
  }
  .Tab[data-audible="true"][data-muted="true"] .fav::before {
    --pulse-color: red;
  }
  @keyframes pulse-bar {
    0% {
      top: 2px;
      left: calc(2px + var(--pulse-indent) + 2px);
      height: calc(100% - 4px);
      width: 0;
      opacity: 0.75;
    }
    100% {
      top: 2px;
      left: calc(2px + var(--pulse-indent) + 2px);
      height: calc(100% - 4px);
      width: calc(100% - var(--pulse-indent) - 8px + var(--pulse-width-adj, 0));
      opacity: 1;
      background: var(--pulse-color);
    }
  }
  @keyframes pulse-circle {
    0% {
      height: 0;
      width: 0;
      top: 50%;
      left: 50%;
      opacity: 1;
    }
    100% {
      height: var(--pulse-diameter);
      width: var(--pulse-diameter);
      top: calc(50% - var(--pulse-diameter) / 2);
      left: calc(50% - var(--pulse-diameter) / 2);
      opacity: 0;
      background: var(--pulse-color);
    }
  }
  /* ------- muted tabs */
  .Tab[data-audible="false"][data-muted="true"] .fav::before {
    height: var(--pulse-diameter);
    width: var(--pulse-diameter);
    top: calc(50% - var(--pulse-diameter) / 2);
    left: calc(50% - var(--pulse-diameter) / 2);
    background: red;
    animation: pulse-bg 1.25s ease-out 0s infinite alternate;
  }
  @keyframes pulse-bg {
    0% {
      opacity: 0.4;
    }
    100% {
      opacity: 0;
    }
  }

  /* --------------------- misc styles */
  /* -------------- move confirm-popup to center */
  .popup-container {
    align-items: center;
  }
}

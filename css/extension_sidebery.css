/* shrink sidebar splitter when sidebery is open and sidebar isn't autohidden */
#main-window[tabsintitlebar="true"]:not([extradragspace="true"]) #sidebar-box[sidebarcommand="_3c078156-979c-498b-8990-85f7987dd929_-sidebar-action"][positionend] + #sidebar-splitter {
  margin-inline: 0 0px;
  width: 1px;
  border-left: 1px solid color-mix(in srgb, var(--lwt-accent-color) 95%, white);
}
/* hide sidebar header */
#main-window[tabsintitlebar="true"]:not([extradragspace="true"]) #sidebar-box[sidebarcommand="_3c078156-979c-498b-8990-85f7987dd929_-sidebar-action"] #sidebar-header {
  display: none;
}
/* sidebery sidebar stylesheet */
/* about:devtools-toolbox?id=%7B3c078156-979c-498b-8990-85f7987dd929%7D&type=extension */
@-moz-document url("moz-extension://f93f4dcf-b3a0-4090-afca-85acf2572e3a/sidebar/sidebar.html")
{
  #root {
    --tabs-font: 13pt "Segoe UI";
    --tabs-count-font: 0.65rem "Verdana";
    --bookmarks-bookmark-font: 0.875rem "Segoe UI";
    --bookmarks-folder-font: 10pt "Segoe UI";
  }
  /* change scroll bar color to match theme */
  .ScrollBox > .scroll-container {
    scrollbar-color: color-mix(in srgb, var(--ff-frame) 75%, white) color-mix(in srgb, var(--ff-frame) 90%, white) !important;
  }
  /* add noise to sidebar elements' backgrounds */
  #root,
  .NavigationBar.-top,
  .SearchBar,
  .SearchBar::before,
  .TabsPanel .PinnedTabsBar,
  .TabsPanel .ScrollBox > .scroll-container > .scrollable,
  .TabsPanel .new-tab-btns {
    background-image: url("chrome://userchrome/content/UserStyles/images/noise-512x512.png");
    /*     background-color: color-mix(in srgb, var(--frame-bg) 90%, transparent);
    background-image: url("chrome://global/skin/media/imagedoc-darknoise.png");
    background-blend-mode: color-dodge; */
  }
  /* add margins and rounding around tabs */
  #root {
    --tabs-height: 42px;
    --tabs-pinned-height: var(--tabs-height);
    --tabs-pinned-width: var(--tabs-height);
    --selected-bg: rgba(0, 108, 151, 0.8) !important;
    --selected-border: var(--selected-bg) !important;
    --fav-size: 24px;
  }

  /* background layer */
  .Tab[data-pin="false"] {
    margin: 0px;
    width: 100%;
  }
  .Tab[data-pin="true"] {
    width: calc(var(--fav-size) + 12px);
    height: calc(var(--fav-size) + 12px);
    margin: 1px 4px 12px 3px;
    padding-bottom: 0px;
  }
  .Tab .body::before,
  .Tab .flash-fx {
    top: 2px !important;
    left: 4px !important;
    width: calc(100% - 8px);
    height: calc(100% - 4px);
  }
  .Tab[data-pin="true"] .body::before,
  .Tab[data-pin="true"] .flash-fx {
    top: 2px !important;
    left: -2px !important;
    width: calc(100% + 4px) !important;
    height: calc(100% + 2px) !important;
  }
  .Tab .close {
    right: 9px;
    margin: 0px;
    height: calc(var(--fav-size) + 2px);
    top: calc((100% - var(--fav-size) - 2px) / 2);
  }
  .Tab .t-box {
    --close-btn-offset: calc(var(--fav-size) + 2px);
  }
  .Tab .fav {
    width: var(--fav-size);
    height: var(--fav-size);
/*     background: #FF000055 */
  }
  .Tab[data-pin="true"] .fav {
    margin-top: 6px;
  }
  .Tab[data-pin="false"] .fav {
    margin-left: 10px;
  }
  .Tab .fav > .fav-icon {
    /*     image-rendering: optimizequality; */
    width: var(--fav-size);
    height: var(--fav-size);
    /*  filter: drop-shadow(0px 0px 4px rgba(220,220,220,0.3)) !important;*/
  }
  /* adjust audio icon */
  .Tab .audio {
    left: calc(var(--fav-size) + 10px) !important;
    filter: drop-shadow(0px 0px 1px black) drop-shadow(0px 0px 1px black);
  }
  .Tab[data-pin="true"] .audio {
    top: calc(var(--fav-size) - 2px) !important;
    left: calc(var(--fav-size) - 4px) !important;
    filter: drop-shadow(0px 0px 1px black);
  }
  /* create box shadow for nav buttons */
  .NavigationBar.-top::after {
    content: "";
    width: 100%;
    height: 6px;
    left: 0;
    bottom: -6px;
    box-shadow: 0 -1px 0 0 rgba(0,0,0,.071),0 -1px 6px 0 rgba(0,0,0,.408);
    clip-path: inset(-6px 0px 0px 0px);
    position: absolute;
  }
  /* create box shadow for search */
  #search_bar[data-showed="true"]::after {
    content: "";
    width: 100%;
    height: 6px;
    left: 0;
    bottom: 1px;
    box-shadow: 0 -1px 0 0 rgba(0,0,0,.471),0 -1px 6px 0 rgba(0,0,0,.808);
    clip-path: inset(0px 0px -6px 0px);
    position: absolute;
    z-index: 200;
  }
  /* fix padding of static nav buttons */
  .NavigationBar.-top .static-btns {
/*     margin-right: 0px; */
  }
  /* adjust navigation buttons */
  .NavigationBar[data-layout="inline"] .main-items .nav-item[data-index="1"] {
    transform: translateX(calc((var(--nav-btn-width) + 2px) * 1));
  }
  .NavigationBar[data-layout="inline"] .main-items .nav-item[data-index="2"] {
    transform: translateX(calc((var(--nav-btn-width) + 2px) * 2));
  }
  .NavigationBar[data-layout="inline"] .main-items .nav-item[data-index="3"] {
    transform: translateX(calc((var(--nav-btn-width) + 2px) * 3));
  }
  .NavigationBar[data-layout="inline"] .main-items .nav-item[data-index="4"] {
    transform: translateX(calc((var(--nav-btn-width) + 2px) * 4));
  }
  .NavigationBar[data-layout="inline"] .main-items .nav-item[data-index="5"] {
    transform: translateX(calc((var(--nav-btn-width) + 2px) * 5));
  }
  .NavigationBar[data-layout="inline"] .main-items .nav-item[data-index="6"] {
    transform: translateX(calc((var(--nav-btn-width) + 2px) * 6));
  }
  .NavigationBar[data-layout="inline"] .main-items .nav-item[data-index="7"] {
    transform: translateX(calc((var(--nav-btn-width) + 2px) * 7));
  }
  /* fix size of new tab button */
  .TabsPanel .new-tab-btns {
/*     margin: 0px 0px 0px 0px; */
/*     width: calc(100% - 1px); */
  }
  /* make scrollbar slightly visible */
  .scroll-container {
    scrollbar-color: rgb(100, 100, 100) rgb(50, 50, 50) !important;
  }

  /* --------------------- Variables used for styling of tree container strip and audible tabs */
  /* .Tab{--tab-lvl: attr(data-lvl number,0);} - attr not supported in FF yet */
  .Tab[data-lvl="0"], .pointer[data-lvl="0"] { --tab-lvl: 0; }
  .Tab[data-lvl="1"], .pointer[data-lvl="1"] { --tab-lvl: 1; }
  .Tab[data-lvl="2"], .pointer[data-lvl="2"] { --tab-lvl: 2; }
  .Tab[data-lvl="3"], .pointer[data-lvl="3"] { --tab-lvl: 3; }
  .Tab[data-lvl="4"], .pointer[data-lvl="4"] { --tab-lvl: 4; }
  .Tab[data-lvl="5"], .pointer[data-lvl="5"] { --tab-lvl: 5; }
  .Tab[data-lvl="6"], .pointer[data-lvl="6"] { --tab-lvl: 6; }
  .Tab[data-lvl="7"], .pointer[data-lvl="7"] { --tab-lvl: 7; }
  .Tab[data-lvl="8"], .pointer[data-lvl="8"] { --tab-lvl: 8; }
  .Tab[data-lvl="9"], .pointer[data-lvl="9"] { --tab-lvl: 9; }
  .Tab[data-lvl="10"], .pointer[data-lvl="10"] { --tab-lvl: 10; }
  .Tab[data-lvl="11"], .pointer[data-lvl="11"] { --tab-lvl: 11; }

  /* --------------------- Autohide sidebar tweaks */
  /* ---------------- Reverse top toolbars when not hovering tree */
  /*
  #root[position="left"] .NavigationBar,
  #root:not(:hover) .NavigationBar {
    flex-direction: row-reverse;
  }
  /* ------- Last pin is shown and clickable in panel mode */
  /* ---- browser on right */
  /*
  #root[data-pinned-tabs-position="panel"] .PinnedDock {
    justify-content: flex-end;
  }
  #root[data-pinned-tabs-position="panel"]:not(:hover) .PinnedDock {
    flex-direction: row-reverse;
  }
  /* ---- browser on left */
  /*
  #root[data-pinned-tabs-position="panel"] .PinnedDock {
    justify-content: flex-end;
    flex-direction: row-reverse;
  }
  /* ------- First pin is shown and clickable in panel mode */
  /* ---- browser on right */
  /*
  #root[data-pinned-tabs-position="panel"]:hover .PinnedDock {
    flex-direction: row-reverse;
  }
  /* ---------------- Change container strip into border */
  .Tab .ctx {
    --ctx-height: var(--tabs-height);
    position: absolute !important;
    top: 2px !important;
    left: 4px !important;
    width: calc(100% - 8px) !important;
    height: calc(100% - 4px) !important;
    border-radius: 4px;
    background: var(--color);
    mask: linear-gradient(to top, transparent, #000) top / 100% 5px,
          linear-gradient(to bottom, transparent, #000) bottom / 100% 5px,
          linear-gradient(to left, transparent, #000) left / 5px 100%,
          linear-gradient(to right, transparent, #000) right / 5px 100%;
    mask-repeat: no-repeat;
    mask-composite: add;
    opacity: 0.75;
    pointer-events: none;
    touch-action: none;
  }
  .Tab[data-pin="true"] .ctx {
    top: 2px !important;
    left: -2px !important;
    width: calc(100% + 4px) !important;
    height: calc(100% + 2px) !important;
  }
  /* --------------------- tab styles */
  /* -------------- tree: move group counts to left of favicon */
  .Tab .fav > .child-count {
    top: calc(4 * var(--fav-size) / 6);
    right: calc(var(--fav-size) / -8);
    filter: drop-shadow(0px 0px 1px black);
    text-align: right;
    width: var(--fav-size);
  }
  /* -------------- tree: tab title */
  .Tab .t-box {
    width: calc(100% - 50px);
  }
  .Tab .title {
    margin-bottom: 3px;
  }
  /* -------------- tree: tab title - active is bold */
  .Tab[data-active="true"] .title {
    --tabs-font: 12.5pt Segoe UI;
    font-weight: bold;
  }
  /* -------------- tree: tab title - discarded is strikethrough */
  .Tab[data-discarded="true"] .title {
    text-decoration: line-through;
  }
  /* -------------- tree: tab title - unread is italicized */
  .Tab[data-unread="true"] .title {
    font-style: italic;
  }
  /* -------------- tree: tab title - scroll long titles */
/*   .Tab:hover .title {
    animation: scrollTitle 6s linear infinite alternate;
    display: inline-block;
    margin-bottom: 1px;
  }
  .Tab[data-active="true"]:hover .title {
    margin-bottom: 0px;
  }
  @keyframes scrollTitle {
    0%, 10%, 90%, 100% {
      transform: translateX(0%);
    }
    50% {
      transform: translateX(-100%);
    }
  } */
/*   #root {
  --tabs-font-size: 12px;
  --tabs-title-lines: 2;
} */

  .Tab:hover .title {
/*     animation: scrollTitle 2s linear infinite alternate; */
/*     display: inline-block; */
/*     margin-bottom: 1px; */
  }
  .Tab[data-active="true"]:hover .title {
/*     margin-bottom: 0px; */
  }
  @keyframes scrollTitle {
    0%, 10%, 90%, 100% {
      transform: translatey(0%);
    }
    50% {
      transform: translatey(-100%);
    }
  }

/* .Tab .title {
  overflow: hidden;
} */
.Tab .title {
/*   vertical-align: middle; */
/*   white-space: pre-wrap; */
/*   inline-size: fit-content;
  block-size: min-content; */
/*   overflow-wrap: break-word; */
/*   line-height: 1.4em;
  word-break: break-word;
  white-space: normal; */
  }
  .Tab .t-box {
/*   clip-path: inset(4px 0 calc(0px + var(--fav-size)) 0); */
  }
  .Tab, .t-box {
}
  .Tab .t-box .title {
/*    max-height: 1.4em; */
/*     position: fixed !important;
  top: 100% !important; */
/*     background-color: red !important;
    margin-top: 48px !important; */
}
  /* -------------- tree: unread tab indicator is blurball */
  .Tab .unread-mark {
    left: calc(var(--fav-size) / 6);
    bottom: calc(var(--fav-size) / 10);
    width: 12px;
    height: 12px;
  }
  .Tab[data-pin="true"] .unread-mark {
    left: calc(var(--fav-size) / -10);
    bottom: calc(var(--fav-size) / -6);
  }
  .Tab .unread-mark::before {
    /* left: calc(var(--fav-size) / -4);
    bottom: calc(var(--fav-size) / -4); */
    z-index: -1;
    display: block;
    border-radius: 50%;
    border: 0px solid transparent;
    width: 12px;
    height: 12px;
    opacity: 0;
    /* transform: scale(0.7, 0.7); */
    background-color: transparent;
    mask: radial-gradient(circle, #000 1px, #0000 2px), radial-gradient(circle, #000, #0000 5px);
    /* transition: opacity var(--d-slow), transform var(--d-slow),
      background-color var(--d-slow); */
  }
  .Tab[data-unread="true"] .unread-mark::before {
    opacity: 1;
    transform: scale(1, 1);
    background-color: white;
  }
  .Tab[data-unread="true"][data-discarded="true"] .unread-mark::before {
    opacity: 0.32;
  }
  /* -------------- tree: expando fixes (center it) */
  .Tab[data-parent="true"][data-folded] .exp {
    left: calc(0%);
    top: calc(0%);
  }
  .Tab[data-parent="true"][data-folded="true"] .exp {
    top: calc(0% - 8px);
  }

  /* -------------- tabs: default browser style for updated tabs (blurball instead of blue dot) */
  .Tab:not([data-loading="true"]) .fav-icon {
    mask: unset !important;
  }
  .Tab .badge {
    width: 12px;
    height: 12px;
    top: -6px;
    left: -6px;
    z-index: -1;
    mask: radial-gradient(circle, #000 1px, #0000 2px),
          radial-gradient(circle, #000, #0000 5px);
    transition: opacity var(--d-slow), transform var(--d-slow), background-color var(--d-slow);
  }
  /*
  1st - custom using mask:
    mask:
      radial-gradient(circle,#000 1px,#0000 2px),
      radial-gradient(circle,#000,#0000 5px);
  2nd - custom using background:
    background:
      radial-gradient(circle,var(--tabs-update-badge-bg) 1px,#0000 2px),
      radial-gradient(circle,var(--tabs-update-badge-bg),#0000 5px);
  3rd - browser default (20200418):
    background: url("chrome://browser/skin/tabbrowser/indicator-tab-attention.svg");
  4th - browser default via css:
    background:
      radial-gradient(circle,rgb(0, 254, 255),rgb(0, 254, 255) 2px,#0000 2px),
      radial-gradient(circle,rgba(0, 200, 215, .6),rgba(0, 200, 215, .6) 4px,#0000 4px),
      radial-gradient(circle,rgba(0, 200, 215, .2),rgba(0, 200, 215, .2) 6px,#0000 6px);
  5th - browser default w. smooth gradient:
    background: radial-gradient(circle,rgb(0, 254, 255),rgba(0, 200, 215, .6) 2px,rgba(0, 200, 215, .2) 4px,#0000 6px);
  */
  /* -------------- tabs: hourglass icon for pending tabs */
  .Tab[data-loading="true"] .badge,
  .Tab:not([data-loading="true"])[data-pending="true"] .badge {
    width: 14px;
    height: 14px;
    filter: drop-shadow(0px 0px 1px white);
    background: transparent url(chrome://browser/skin/tabbrowser/hourglass.svg) center/contain;
    z-index: initial;
    mask: unset;
    transition: opacity var(--d-slow), transform var(--d-slow), background var(--d-slow);
  }
  #root[data-color-scheme="dark"] .Tab[data-loading="true"] .badge,
  #root[data-color-scheme="dark"] .Tab:not([data-loading="true"])[data-pending="true"] .badge {
    filter: invert(100%) drop-shadow(0px 0px 1px black);
  }
  /* -------------- tabs: custom idents */
  /* .Tab:not([data-lvl="0"])::before {
    --tree-line-width: 24px;
    content: "";
    min-width: calc(var(--tree-line-width) * var(--tab-lvl));
    align-self: stretch;
    background-image: linear-gradient(
      90deg,
      transparent 11px,
      white 11px,
      transparent 12px
    );
    background-size: calc(var(--tree-line-width) * var(--tab-lvl)) 100%;
    background-position-x: 12px;
    background-repeat: repeat;
  }
  .Tab:not([data-lvl="0"]) > .body {
    background-image: linear-gradient(white, currentcolor);
    background-position-y: center;
    background-repeat: no-repeat;
    background-size: 1em 1px;
  }
  .Tab {
    padding-left: 0 !important;
  }
  .Tab > .body {
    overflow: hidden;
    width: unset;
    flex-basis: 100%;
  }
  .Tab:not([data-lvl="0"]) > .body {
    padding-left: 8px;
    margin-left: 0px;
  } */
  #root[data-tabs-tree-lvl-marks="true"] {
    --tabs-indent: 18px;
    --indent-modifier: 0;
  }
  #root[data-tabs-tree-lvl-marks="true"] .Tab[data-pin="false"]:not([data-lvl="0"]) {
    padding-left: calc(var(--tabs-indent) * var(--tab-lvl)) !important;
  }
  /* set height/width/style of tree level marker */
  #root[data-tabs-tree-lvl-marks="true"] .Tab[data-pin="false"]:not([data-lvl="0"]) .body::after {
    --indent-offset: 0;
    --tabs-lvl-opacity: 0.6;
    top: calc(50% - 2px);
    left: -8px;
    width: 4px !important;
    height: 4px !important;
    border-radius: 2px;
    display: block;
    box-shadow: calc(var(--tabs-indent) * (-1 - var(--indent-modifier))) var(--indent-offset) 0 0 var(--frame-fg),
                calc(var(--tabs-indent) * (-2 - var(--indent-modifier))) var(--indent-offset) 0 0 var(--frame-fg),
                calc(var(--tabs-indent) * (-3 - var(--indent-modifier))) var(--indent-offset) 0 0 var(--frame-fg),
                calc(var(--tabs-indent) * (-4 - var(--indent-modifier))) var(--indent-offset) 0 0 var(--frame-fg),
                calc(var(--tabs-indent) * (-5 - var(--indent-modifier))) var(--indent-offset) 0 0 var(--frame-fg),
                calc(var(--tabs-indent) * (-6 - var(--indent-modifier))) var(--indent-offset) 0 0 var(--frame-fg),
                calc(var(--tabs-indent) * (-7 - var(--indent-modifier))) var(--indent-offset) 0 0 var(--frame-fg),
                calc(var(--tabs-indent) * (-8 - var(--indent-modifier))) var(--indent-offset) 0 0 var(--frame-fg),
                calc(var(--tabs-indent) * (-9 - var(--indent-modifier))) var(--indent-offset) 0 0 var(--frame-fg),
                calc(var(--tabs-indent) * (-10 - var(--indent-modifier))) var(--indent-offset) 0 0 var(--frame-fg);
  }
  #root[data-tabs-tree-lvl-marks="true"] .Tab[data-pin="false"]:not([data-lvl="0"]):not([data-lvl="1"]) .body::after {
    --indent-offset: 3px;
    top: calc(50% - 6px);
    font: bold var(--tabs-count-font);
    color: var(--toolbar-fg);
    background-color: unset;
    background-image: unset;
  }
  #root[data-tabs-tree-lvl-marks="true"] .Tab[data-pin="false"][data-lvl="2"] .body::after { content: "2"; }
  #root[data-tabs-tree-lvl-marks="true"] .Tab[data-pin="false"][data-lvl="3"] .body::after { content: "3"; }
  #root[data-tabs-tree-lvl-marks="true"] .Tab[data-pin="false"][data-lvl="4"] .body::after { content: "4"; }
  #root[data-tabs-tree-lvl-marks="true"] .Tab[data-pin="false"][data-lvl="5"] .body::after { content: "5"; }
  #root[data-tabs-tree-lvl-marks="true"] .Tab[data-pin="false"][data-lvl="6"] .body::after { content: "6"; }
  #root[data-tabs-tree-lvl-marks="true"] .Tab[data-pin="false"][data-lvl="7"] .body::after { content: "7"; }
  #root[data-tabs-tree-lvl-marks="true"] .Tab[data-pin="false"][data-lvl="8"] .body::after { content: "8"; }
  #root[data-tabs-tree-lvl-marks="true"] .Tab[data-pin="false"][data-lvl="9"] .body::after { content: "9"; }
  #root[data-tabs-tree-lvl-marks="true"] .Tab[data-pin="false"][data-lvl="10"] .body::after { content: "10"; }
  /* change tab drag pointer */
  .TabsPanel[data-pos="center"] ~ .pointer[data-pointer="between"]:not([data-lvl="0"])::before,
  .TabsPanel[data-pos="center"] ~ .pointer[data-pointer="between"]:not([data-lvl="0"])::after {
    transform: translateX(calc(var(--tabs-indent) * var(--tab-lvl) * 1 - 6px));
  }
  /* add level digit to tab drag pointer */
  .TabsPanel[data-pos="center"] ~ .pointer[data-pointer="between"]::before {
    font: bold var(--tabs-count-font);
    color: var(--toolbar-fg);
  }
  .TabsPanel[data-pos="center"] ~ .pointer[data-pointer="between"][data-lvl="0"]::before { content: "0"; }
  .TabsPanel[data-pos="center"] ~ .pointer[data-pointer="between"][data-lvl="1"]::before { content: "1"; }
  .TabsPanel[data-pos="center"] ~ .pointer[data-pointer="between"][data-lvl="2"]::before { content: "2"; }
  .TabsPanel[data-pos="center"] ~ .pointer[data-pointer="between"][data-lvl="3"]::before { content: "3"; }
  .TabsPanel[data-pos="center"] ~ .pointer[data-pointer="between"][data-lvl="4"]::before { content: "4"; }
  .TabsPanel[data-pos="center"] ~ .pointer[data-pointer="between"][data-lvl="5"]::before { content: "5"; }
  .TabsPanel[data-pos="center"] ~ .pointer[data-pointer="between"][data-lvl="6"]::before { content: "6"; }
  .TabsPanel[data-pos="center"] ~ .pointer[data-pointer="between"][data-lvl="7"]::before { content: "7"; }
  .TabsPanel[data-pos="center"] ~ .pointer[data-pointer="between"][data-lvl="8"]::before { content: "8"; }
  .TabsPanel[data-pos="center"] ~ .pointer[data-pointer="between"][data-lvl="9"]::before { content: "9"; }
  .TabsPanel[data-pos="center"] ~ .pointer[data-pointer="between"][data-lvl="10"]::before { content: "10"; }
  /*   .TabsPanel[data-pos="center"]
    ~ .pointer[data-pointer="between"]:not([data-lvl="0"])::before,
  .TabsPanel[data-pos="center"]
    ~ .pointer[data-pointer="between"]:not([data-lvl="0"])::after {
    transform: translateX(calc(var(--tabs-indent) * var(--tab-lvl) * 2));
  }
  .TabsPanel[data-pos="center"]
    ~ .pointer[data-pointer="between"][data-lvl="1"]::before,
  .TabsPanel[data-pos="center"]
    ~ .pointer[data-pointer="between"][data-lvl="1"]::after {
    transform: translateX(calc(var(--tabs-indent) * var(--tab-lvl) * 1.5));
  }
  .TabsPanel[data-pos="center"]
    ~ .pointer[data-pointer="between"][data-lvl="2"]::before,
  .TabsPanel[data-pos="center"]
    ~ .pointer[data-pointer="between"][data-lvl="2"]::after {
    transform: translateX(calc(var(--tabs-indent) * var(--tab-lvl) * 1.8));
  }
  .TabsPanel[data-pos="center"]
    ~ .pointer[data-pointer="between"][data-lvl="3"]::before,
  .TabsPanel[data-pos="center"]
    ~ .pointer[data-pointer="between"][data-lvl="3"]::after {
    transform: translateX(calc(var(--tabs-indent) * var(--tab-lvl) * 1.9));
  }
  .TabsPanel[data-pos="center"]
    ~ .pointer[data-pointer="between"][data-lvl="4"]::before,
  .TabsPanel[data-pos="center"]
    ~ .pointer[data-pointer="between"][data-lvl="4"]::after {
    transform: translateX(calc(var(--tabs-indent) * var(--tab-lvl) * 1.95));
  }
  .TabsPanel[data-pos="center"]
    ~ .pointer[data-pointer="between"][data-lvl="5"]::before,
  .TabsPanel[data-pos="center"]
    ~ .pointer[data-pointer="between"][data-lvl="5"]::after {
    transform: translateX(calc(var(--tabs-indent) * var(--tab-lvl) * 1.97));
  } */
  /* -------------- tabs: audio events */
  /* ------- Audible tabs */
  .Tab[data-audible="true"] .fav::before,
  .Tab[data-muted="true"] .fav::before {
    --pulse-diameter: var(--tabs-height);
    --pulse-indent: calc(var(--tab-lvl) * var(--tabs-indent, 0px));
    content: "";
    position: absolute;
    border-radius: 4px;
    pointer-events: none;
    touch-action: none;
    box-sizing: border-box;
  }
  .Tab[data-audible="true"][data-pin="true"]::before,
  .Tab[data-muted="true"][data-pin="true"]::before {
    --pulse-width-adj: 4px;
  }
  .Tab[data-audible="true"] .fav::before {
    animation: pulse-circle 1.25s ease-out 0s infinite;
    --pulse-color: white;
  }
  .Tab[data-audible="true"][data-muted="true"] .fav::before {
    --pulse-color: red;
  }
  @keyframes pulse-bar {
    0% {
      top: 2px;
      left: calc(2px + var(--pulse-indent) + 2px);
      height: calc(100% - 4px);
      width: 0px;
      opacity: 0.75;
    }
    100% {
      top: 2px;
      left: calc(2px + var(--pulse-indent) + 2px);
      height: calc(100% - 4px);
      width: calc(100% - var(--pulse-indent) - 8px + var(--pulse-width-adj, 0px));
      opacity: 1;
      background: var(--pulse-color);
    }
  }
  @keyframes pulse-circle {
    0% {
      height: 0px;
      width: 0px;
      top: 50%;
      left: 50%;
      opacity: 1;
    }
    100% {
      height: calc(var(--pulse-diameter) - 4px);
      width: calc(var(--pulse-diameter) - 4px);
      top: calc(50% - var(--pulse-diameter) / 2 + 2px);
      left: calc(50% - var(--pulse-diameter) / 2 + 2px);
      opacity: 0;
      background: var(--pulse-color);
    }
  }
  /* ------- Muted tabs */
  .Tab[data-audible="false"][data-muted="true"] .fav::before {
    height: calc(var(--pulse-diameter) - 4px);
    width: calc(var(--pulse-diameter) - 4px);
    top: calc(50% - var(--pulse-diameter) / 2 + 2px);
    left: calc(50% - var(--pulse-diameter) / 2 + 2px);
    background: red;
    animation: pulse-bg 1.25s ease-out 0s infinite alternate;
  }
  @keyframes pulse-bg {
    0% {
      opacity: 0.4;
    }
    100% {
      opacity: 0;
    }
  }
  /* --------------------- misc styles */
  /* -------------- move confirm-popup to center */
  .popup-container {
    align-items: center;
  }

  /* --------------------- Adjust styles according to sidebar width */
  #root[data-pinned-tabs-position="panel"] .PinnedTabsBar {
    flex-wrap: nowrap !important;
    justify-content: center;
    overflow-y: hidden;
    scrollbar-width: none;
  }
}
